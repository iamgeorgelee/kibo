{
    "project": {
        "name": "kibo",
        "description": "",
        "version": "0.0.1",
        "url": ""
    },
    "files": {
        "controllers/eventController.js": {
            "name": "controllers/eventController.js",
            "modules": {},
            "classes": {
                "eventContorller": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "controllers/restController.js": {
            "name": "controllers/restController.js",
            "modules": {},
            "classes": {
                "restController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "controllers/userController.js": {
            "name": "controllers/userController.js",
            "modules": {},
            "classes": {
                "UserController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "public/javascripts/socket.io.js": {
            "name": "public/javascripts/socket.io.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "routes/dbRoutes.js": {
            "name": "routes/dbRoutes.js",
            "modules": {},
            "classes": {
                "dbController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app.js": {
            "name": "app.js",
            "modules": {
                "Kibo": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Kibo": {
            "name": "Kibo",
            "submodules": {},
            "classes": {
                "eventContorller": 1,
                "restController": 1,
                "UserController": 1,
                "dbController": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "routes/dbRoutes.js",
            "line": 1
        }
    },
    "classes": {
        "eventContorller": {
            "name": "eventContorller",
            "shortname": "eventContorller",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Kibo",
            "file": "controllers/eventController.js",
            "line": 5,
            "description": "User API",
            "is_constructor": 1
        },
        "restController": {
            "name": "restController",
            "shortname": "restController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Kibo",
            "file": "controllers/restController.js",
            "line": 1,
            "description": "Restaurant API",
            "is_constructor": 1
        },
        "UserController": {
            "name": "UserController",
            "shortname": "UserController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Kibo",
            "file": "controllers/userController.js",
            "line": 1,
            "description": "User API",
            "is_constructor": 1
        },
        "dbController": {
            "name": "dbController",
            "shortname": "dbController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Kibo",
            "file": "routes/dbRoutes.js",
            "line": 1,
            "description": "MongoLab API",
            "is_constructor": 1
        }
    },
    "classitems": [
        {
            "file": "controllers/eventController.js",
            "line": 16,
            "description": "[GET]\n\nGet app user list",
            "itemtype": "method",
            "name": "getUsers",
            "return": {
                "description": "app user list",
                "type": "JSON"
            },
            "example": [
                " /api/getUsers"
            ],
            "class": "eventContorller"
        },
        {
            "file": "controllers/eventController.js",
            "line": 32,
            "description": "[GET]\n\nGet event by id",
            "itemtype": "method",
            "name": "getEventById",
            "params": [
                {
                    "name": "eventId",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "event data",
                "type": "JSON"
            },
            "example": [
                " /api/event/:eventId"
            ],
            "class": "eventContorller"
        },
        {
            "file": "controllers/eventController.js",
            "line": 49,
            "description": "[POST]\n\nCreate Event\n(should add send friend request later on)",
            "itemtype": "method",
            "name": "createEvent",
            "params": [
                {
                    "name": "userId",
                    "description": "User who wants to add friend",
                    "type": "String"
                },
                {
                    "name": "friendId",
                    "description": "Friend to add (in request content)",
                    "type": "String"
                }
            ],
            "return": {
                "description": "user data",
                "type": "JSON"
            },
            "example": [
                " /api/event\n{\n\t  \"name\": \"test1\",\n\t  \"time\": \"6:30\",\n\t  \"Date\": \"11/11/2014\",\n\t  \"guest\": [\n\t    {\n\t      \"id\": \"a45612378\"\n\t    },\n\t    {\n\t      \"id\": \"a445122378\"\n\t    }\n\t  ],\n\t  \"creater\": \"a123456789\"\n\t}\n"
            ],
            "class": "eventContorller"
        },
        {
            "file": "controllers/eventController.js",
            "line": 83,
            "description": "[PUT]\n\nguest RSVP",
            "itemtype": "method",
            "name": "RSVP",
            "params": [
                {
                    "name": "userId",
                    "description": "User who wants to add friend",
                    "type": "String"
                },
                {
                    "name": "friendId",
                    "description": "Friend to add (in request content)",
                    "type": "String"
                }
            ],
            "return": {
                "description": "user data",
                "type": "JSON"
            },
            "example": [
                " /api/event"
            ],
            "class": "eventContorller"
        },
        {
            "file": "controllers/restController.js",
            "line": 11,
            "description": "[GET]\n\nGet recommand restaurant list\n\npayload should look like this\n{  \"participants\": [\n    {\n      \"userId\": \"123456\",\n      \"userPreference\": [\"chinese\", \"mexican\"],\n      \"userLocation\": [37.353596, -121.824393]\n    },\n    {\n      \"userId\": \"154345\",\n      \"userPreference\": [\"korean\", \"pizza\", \"italian\"],\n      \"userLocation\": [37.571382, -122.327199]\n    }]\n}\nPlease remember this should encode with base64 utf-8 format before it sent",
            "itemtype": "method",
            "name": "getRecommendRest",
            "params": [
                {
                    "name": "participants",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "restaurant list",
                "type": "JSON"
            },
            "example": [
                " /api/getRecommendRest?participants=<uft-8 encoded participants arry>"
            ],
            "class": "restController"
        },
        {
            "file": "controllers/restController.js",
            "line": 52,
            "description": "[GET]\n\nGet top 3 recommand restaurant bases on user location",
            "itemtype": "method",
            "name": "getUserLocRecommendRest",
            "params": [
                {
                    "name": "userLocation",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "restaurant list",
                "type": "JSON"
            },
            "example": [
                " /api/user/:userId/getUserLocRecommendRest"
            ],
            "class": "restController"
        },
        {
            "file": "controllers/restController.js",
            "line": 69,
            "description": "[GET]\n\nGet restaurant by id",
            "itemtype": "method",
            "name": "getRestaurantById",
            "params": [
                {
                    "name": "restaurantId",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "restaurant info",
                "type": "JSON"
            },
            "example": [
                " /api/getRestaurantById/:restaurantId"
            ],
            "class": "restController"
        },
        {
            "file": "controllers/restController.js",
            "line": 86,
            "description": "[GET]\n\nGet restaurant by an array of ids",
            "itemtype": "method",
            "name": "getRestaurantByIds",
            "params": [
                {
                    "name": "restIds",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "restaurant info",
                "type": "JSON"
            },
            "example": [
                " /api/getRestaurantByIds?restIds=<uft-8 encoded participants arry>"
            ],
            "class": "restController"
        },
        {
            "file": "controllers/restController.js",
            "line": 112,
            "description": "[GET]\n\nSearch restaurants w/ filter",
            "itemtype": "method",
            "name": "searchRestaurants",
            "params": [
                {
                    "name": "filter",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "restaurant info",
                "type": "JSON"
            },
            "example": [
                " /api/searchRestaurants?filter="
            ],
            "class": "restController"
        },
        {
            "file": "controllers/userController.js",
            "line": 158,
            "description": "Clearly a stupid way and obviously there will be a problem when web page user and mobile user do facebook auth the same time.\nSince we dont really need to care about web page right now, temporary ignore it. Need to fix later.",
            "itemtype": "attribute",
            "name": "",
            "class": "UserController"
        },
        {
            "file": "controllers/userController.js",
            "line": 200,
            "description": "Needs to verify later, since the callback changed due to support API.",
            "itemtype": "attribute",
            "name": "",
            "class": "UserController"
        },
        {
            "file": "controllers/userController.js",
            "line": 229,
            "description": "[POST]\n\nPerform sign up for local account",
            "itemtype": "method",
            "name": "localSignup",
            "params": [
                {
                    "name": "username",
                    "description": "(in request content)",
                    "type": "String"
                },
                {
                    "name": "password",
                    "description": "(in request content)",
                    "type": "String"
                }
            ],
            "return": {
                "description": "user data",
                "type": "JSON"
            },
            "example": [
                " /api/localSignup"
            ],
            "class": "UserController"
        },
        {
            "file": "controllers/userController.js",
            "line": 245,
            "description": "[POST]\n\nPerform login for local account",
            "itemtype": "method",
            "name": "localLogin",
            "params": [
                {
                    "name": "username",
                    "description": "(in request content)",
                    "type": "String"
                },
                {
                    "name": "password",
                    "description": "(in request content)",
                    "type": "String"
                }
            ],
            "return": {
                "description": "user data",
                "type": "JSON"
            },
            "example": [
                " /api/localLogin"
            ],
            "class": "UserController"
        },
        {
            "file": "controllers/userController.js",
            "line": 261,
            "description": "[POST]\n\nCreate new user via Facebook auth",
            "itemtype": "method",
            "name": "createUser",
            "params": [
                {
                    "name": "token",
                    "description": "(in request content)",
                    "type": "String"
                },
                {
                    "name": "profileId",
                    "description": "(in request content)",
                    "type": "String"
                },
                {
                    "name": "email",
                    "description": "(in request content)",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "(in request content)",
                    "type": "String"
                },
                {
                    "name": "profilePic",
                    "description": "(in request content)",
                    "type": "String"
                }
            ],
            "return": {
                "description": "success, userId",
                "type": "JSON"
            },
            "example": [
                " /api/createUser"
            ],
            "class": "UserController"
        },
        {
            "file": "controllers/userController.js",
            "line": 282,
            "description": "[POST]\n\nCalled after do FB authentication to get pesponsive user",
            "itemtype": "method",
            "name": "fbLogin",
            "params": [
                {
                    "name": "token",
                    "description": "(in request content)",
                    "type": "String"
                },
                {
                    "name": "profileId",
                    "description": "(in request content)",
                    "type": "String"
                }
            ],
            "return": {
                "description": "success, userId",
                "type": "JSON"
            },
            "example": [
                " /api/fbLogin"
            ],
            "class": "UserController"
        },
        {
            "file": "controllers/userController.js",
            "line": 300,
            "description": "[GET]\n\nPerform facebook account authentication.\nScope defines what kind of data you want user to authorize you.\nAfter perform facebook account authentication, facebook will render to callback location.",
            "itemtype": "method",
            "name": "fbAuth",
            "return": {
                "description": "user data",
                "type": "JSON"
            },
            "deprecated": true,
            "deprecationMessage": "Facebook auth now works in front end",
            "example": [
                " /api/fbAuth"
            ],
            "class": "UserController"
        },
        {
            "file": "controllers/userController.js",
            "line": 318,
            "description": "After perform facebook account authentication, facebook will render back to this location.\nThis is for facebook itself.",
            "itemtype": "method",
            "name": "fbAuth/Callback",
            "deprecated": true,
            "deprecationMessage": "Facebook auth now works in front end",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "user data",
                "type": "JSON"
            },
            "class": "UserController"
        },
        {
            "file": "controllers/userController.js",
            "line": 340,
            "description": "[GET]\n\nGet app user list",
            "itemtype": "method",
            "name": "getUsers",
            "return": {
                "description": "app user list",
                "type": "JSON"
            },
            "example": [
                " /api/getUsers"
            ],
            "class": "UserController"
        },
        {
            "file": "controllers/userController.js",
            "line": 356,
            "description": "[GET]\n\nGet user by id",
            "itemtype": "method",
            "name": "getUserById",
            "params": [
                {
                    "name": "userId",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "user data",
                "type": "JSON"
            },
            "example": [
                " /api/user/:userId"
            ],
            "class": "UserController"
        },
        {
            "file": "controllers/userController.js",
            "line": 373,
            "description": "[GET]\n\nGet facebook friends who also authorize this app.",
            "itemtype": "method",
            "name": "getFbFriends",
            "params": [
                {
                    "name": "userId",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "facebook friends",
                "type": "JSON"
            },
            "example": [
                " /api/user/:userId/getFbFriends"
            ],
            "class": "UserController"
        },
        {
            "file": "controllers/userController.js",
            "line": 390,
            "description": "[GET]\n\nGet friend list",
            "itemtype": "method",
            "name": "getFriendList",
            "params": [
                {
                    "name": "userId",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "List of friends",
                "type": "JSON"
            },
            "example": [
                " /api/user/:userId/getFriendList"
            ],
            "class": "UserController"
        },
        {
            "file": "controllers/userController.js",
            "line": 407,
            "description": "[POST]\n\nAdd friend\n\nAvoid use this function directly, should do review friend request instead",
            "itemtype": "method",
            "name": "addFriend",
            "params": [
                {
                    "name": "userId",
                    "description": "User who wants to add friend",
                    "type": "String"
                },
                {
                    "name": "friendId",
                    "description": "Friend to add (in request content)",
                    "type": "String"
                }
            ],
            "return": {
                "description": "user data",
                "type": "JSON"
            },
            "example": [
                " /api/user/:userId/addFriend"
            ],
            "class": "UserController"
        },
        {
            "file": "controllers/userController.js",
            "line": 427,
            "description": "[POST]\n\nUnfriend",
            "itemtype": "method",
            "name": "unfriend",
            "params": [
                {
                    "name": "userId",
                    "description": "User who wants to unfriend",
                    "type": "String"
                },
                {
                    "name": "friendId",
                    "description": "Friend to remove (in request content)",
                    "type": "String"
                }
            ],
            "return": {
                "description": "user data",
                "type": "JSON"
            },
            "example": [
                " /api/user/:userId/unfriend"
            ],
            "class": "UserController"
        },
        {
            "file": "controllers/userController.js",
            "line": 445,
            "description": "[GET]\n\nGet a list of app user you can add them as friend\nWhen this is useful? User wants to add friend via 'Search by name'",
            "itemtype": "method",
            "name": "getFriendCandidate",
            "params": [
                {
                    "name": "userId",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "List of app user to add",
                "type": "JSON"
            },
            "example": [
                " /api/user/:userId/getFriendCandidate"
            ],
            "class": "UserController"
        },
        {
            "file": "controllers/userController.js",
            "line": 463,
            "description": "[GET]\n\nGet a list of app user who is your facebook friend but not your friend in this app\nWhen this is useful? User wants to add friend via 'Find friends from facebook'",
            "itemtype": "method",
            "name": "getFbFriendCandidate",
            "params": [
                {
                    "name": "userId",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "List of app user to add",
                "type": "JSON"
            },
            "example": [
                " /api/user/:userId/getFbFriendCandidate"
            ],
            "class": "UserController"
        },
        {
            "file": "controllers/userController.js",
            "line": 481,
            "description": "[POST]\n\nSend a friend request.\n\nuserA send a friend request to userB, in user B's DB entry will record the request.",
            "itemtype": "method",
            "name": "friendReq",
            "params": [
                {
                    "name": "userId",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "toFriendId",
                    "description": "(in request content)",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Success",
                "type": "JSON"
            },
            "example": [
                " /api/user/:userId/friendReq"
            ],
            "class": "UserController"
        },
        {
            "file": "controllers/userController.js",
            "line": 494,
            "description": "[GET]\n\nGet friend requests",
            "itemtype": "method",
            "name": "friendReq",
            "params": [
                {
                    "name": "userId",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "List of friend requests",
                "type": "JSON"
            },
            "example": [
                " /api/user/:userId/friendReq"
            ],
            "class": "UserController"
        },
        {
            "file": "controllers/userController.js",
            "line": 516,
            "description": "[POST]\n\nReview friend request, also need to tell approve or deny\nFirst will remove the entry in friendReq and if it's approved it will do add friend",
            "itemtype": "method",
            "name": "reviewFriendReq",
            "params": [
                {
                    "name": "userId",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "approve",
                    "description": "(in request content)",
                    "type": "Boolean"
                },
                {
                    "name": "reviewId",
                    "description": "(in request content)",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Success",
                "type": "JSON"
            },
            "example": [
                " /api/user/:userId/reviewFriendReq"
            ],
            "class": "UserController"
        },
        {
            "file": "controllers/userController.js",
            "line": 536,
            "description": "[POST]\n\nSet user preference\n\nInput should be full user preference, that says, all new add or delete preference should manipulate in client slide\n\nweights = -1, 0, 1\n1 => Like it\n0 => soso\n-1 => definitely not\n\n\"preference\" : [\n   {\n     categories: \"pizza\",\n     weights: \"1\"\n   },\n   {\n     categories: \"salad\",\n     weights: \"-1\"\n   }\n]",
            "itemtype": "method",
            "name": "userPreference",
            "params": [
                {
                    "name": "userId",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "preference",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Success",
                "type": "Boolean"
            },
            "example": [
                " /api/user/:userId/userPreference"
            ],
            "class": "UserController"
        },
        {
            "file": "controllers/userController.js",
            "line": 565,
            "description": "[GET]\n\nGet user preference",
            "itemtype": "method",
            "name": "userPreference",
            "params": [
                {
                    "name": "userId",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "user preference",
                "type": "Json"
            },
            "example": [
                " /api/user/:userId/userPreference"
            ],
            "class": "UserController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 8,
            "description": "Module dependencies.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 17,
            "description": "Module exports.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 23,
            "description": "Managers cache.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 29,
            "description": "Looks up an existing `Manager` for multiplexing.\nIf the user summons:\n\n  `io('http://localhost/a');`\n  `io('http://localhost/b');`\n\nWe reuse the existing instance based on same scheme/port/host,\nand we initialize sockets for each namespace.",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 69,
            "description": "Protocol version.",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 77,
            "description": "`connect`.",
            "params": [
                {
                    "name": "uri",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 86,
            "description": "Expose constructors for standalone build.",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 97,
            "description": "Module dependencies.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 111,
            "description": "Module exports",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 117,
            "description": "`Manager` constructor.",
            "params": [
                {
                    "name": "engine",
                    "description": "instance or engine uri/opts",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 153,
            "description": "Propagate given event to sockets and emit on `this`",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 166,
            "description": "Mix in `Emitter`.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 172,
            "description": "Sets the `reconnection` config.",
            "params": [
                {
                    "name": "true/false",
                    "description": "if it should automatically reconnect",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "self or value",
                "type": "Manager"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 186,
            "description": "Sets the reconnection attempts config.",
            "params": [
                {
                    "name": "max",
                    "description": "reconnection attempts before giving up",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "self or value",
                "type": "Manager"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 200,
            "description": "Sets the delay between reconnections.",
            "params": [
                {
                    "name": "delay",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "self or value",
                "type": "Manager"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 214,
            "description": "Sets the maximum delay between reconnections.",
            "params": [
                {
                    "name": "delay",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "self or value",
                "type": "Manager"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 228,
            "description": "Sets the connection timeout. `false` to disable",
            "return": {
                "description": "self or value",
                "type": "Manager"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 241,
            "description": "Starts trying to reconnect if reconnection is enabled and we have not\nstarted reconnecting yet",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 257,
            "description": "Sets the current transport `socket`.",
            "params": [
                {
                    "name": "optional,",
                    "description": "callback",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "self",
                "type": "Manager"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 324,
            "description": "Called upon transport open.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 348,
            "description": "Called with data.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 358,
            "description": "Called when parser fully decodes a packet.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 368,
            "description": "Called upon socket error.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 379,
            "description": "Creates a new socket for the given `nsp`.",
            "return": {
                "description": "",
                "type": "Socket"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 399,
            "description": "Called upon a socket close.",
            "params": [
                {
                    "name": "socket",
                    "description": "",
                    "type": "Socket"
                }
            ],
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 409,
            "description": "Writes a packet.",
            "params": [
                {
                    "name": "packet",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 435,
            "description": "If packet buffer is non-empty, begins encoding the\nnext packet in line.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 449,
            "description": "Clean up transport subscriptions and packet buffer.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 465,
            "description": "Close the current socket.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 477,
            "description": "Called upon engine close.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 493,
            "description": "Attempt a reconnection.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 540,
            "description": "Called upon successful reconnect.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 555,
            "description": "Module exports.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 561,
            "description": "Helper for subscriptions.",
            "params": [
                {
                    "name": "obj",
                    "description": "with `Emitter` mixin or `EventEmitter`",
                    "type": "Object|EventEmitter"
                },
                {
                    "name": "event",
                    "description": "name",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 581,
            "description": "Module dependencies.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 594,
            "description": "Module exports.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 600,
            "description": "Internal events (blacklisted).\nThese events can't be emitted by the user.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 620,
            "description": "Shortcut to `Emitter#emit`.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 626,
            "description": "`Socket` constructor.",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 646,
            "description": "Mix in `Emitter`.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 652,
            "description": "Subscribe to open, close and packet events",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 667,
            "description": "Called upon engine `open`.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 682,
            "description": "Sends a `message` event.",
            "return": {
                "description": "self",
                "type": "Socket"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 696,
            "description": "Override `emit`.\nIf the event is in `events`, it's emitted normally.",
            "params": [
                {
                    "name": "event",
                    "description": "name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "self",
                "type": "Socket"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 732,
            "description": "Sends a packet.",
            "params": [
                {
                    "name": "packet",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 744,
            "description": "\"Opens\" the socket.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 759,
            "description": "Called upon engine `close`.",
            "params": [
                {
                    "name": "reason",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 773,
            "description": "Called with socket packet.",
            "params": [
                {
                    "name": "packet",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 814,
            "description": "Called upon a server event.",
            "params": [
                {
                    "name": "packet",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 837,
            "description": "Produces an ack callback to emit with an event.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 862,
            "description": "Called upon a server acknowlegement.",
            "params": [
                {
                    "name": "packet",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 876,
            "description": "Called upon server connect.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 889,
            "description": "Emit buffered events (received and emitted).",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 908,
            "description": "Called upon server disconnect.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 920,
            "description": "Called upon forced client/server side disconnections,\nthis method ensures the manager stops tracking us and\nthat reconnections don't get triggered for this.",
            "api": "private.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 937,
            "description": "Disconnects the socket manually.",
            "return": {
                "description": "self",
                "type": "Socket"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 961,
            "description": "Module dependencies.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 968,
            "description": "Module exports.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 974,
            "description": "URL parser.",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "An",
                    "description": "object meant to mimic window.location.\n                Defaults to window.location.",
                    "type": "Object"
                }
            ],
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1033,
            "description": "Slice reference.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1039,
            "description": "Bind `obj` to `fn`.",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "fn",
                    "description": "or string",
                    "type": "Function|String"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1059,
            "description": "Expose `Emitter`.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1065,
            "description": "Initialize a new `Emitter`.",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1075,
            "description": "Mixin the emitter properties.",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1090,
            "description": "Listen on the given `event` with `fn`.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Emitter"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1107,
            "description": "Adds an `event` listener that will be invoked a single\ntime then automatically removed.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Emitter"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1131,
            "description": "Remove the given callback for `event` or all\nregistered callbacks.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Emitter"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1175,
            "description": "Emit `event` with the given args.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "...",
                    "description": "",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Emitter"
            },
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1198,
            "description": "Return array of callbacks for `event`.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1211,
            "description": "Check if this emitter has `event` handlers.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1225,
            "description": "Expose `debug()` as the module.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1231,
            "description": "Create a debugger with the given `name`.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Type"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1262,
            "description": "The currently active debug mode names.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1269,
            "description": "Enables a debug mode by name. This can include modes\nseparated by a colon and wildcards.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1296,
            "description": "Disable debug output.",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1306,
            "description": "Humanize the given `ms`.",
            "params": [
                {
                    "name": "m",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1325,
            "description": "Returns true if the given mode name is enabled, false otherwise.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1347,
            "description": "Coerce `val`.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1364,
            "description": "Module dependencies.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1370,
            "description": "Expose `Emitter`.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1376,
            "description": "Initialize a new `Emitter`.",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1386,
            "description": "Mixin the emitter properties.",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1401,
            "description": "Listen on the given `event` with `fn`.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Emitter"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1417,
            "description": "Adds an `event` listener that will be invoked a single\ntime then automatically removed.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Emitter"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1441,
            "description": "Remove the given callback for `event` or all\nregistered callbacks.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Emitter"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1478,
            "description": "Emit `event` with the given args.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "...",
                    "description": "",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Emitter"
            },
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1501,
            "description": "Return array of callbacks for `event`.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1514,
            "description": "Check if this emitter has `event` handlers.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1534,
            "description": "Exports parser",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1556,
            "description": "Module exports.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1562,
            "description": "Noop function.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1570,
            "description": "Socket constructor.",
            "params": [
                {
                    "name": "uri",
                    "description": "or options",
                    "type": "String|Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1632,
            "description": "Mix in `Emitter`.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1638,
            "description": "Protocol version.",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1646,
            "description": "Expose deps for legacy compatibility\nand standalone browser access.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1656,
            "description": "Creates transport of the given type.",
            "params": [
                {
                    "name": "transport",
                    "description": "name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Transport"
            },
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1705,
            "description": "Initializes transport to use and starts probe.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1723,
            "description": "Sets the current transport. Disables the existing one (if any).",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1757,
            "description": "Probes a transport.",
            "params": [
                {
                    "name": "transport",
                    "description": "name",
                    "type": "String"
                }
            ],
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1876,
            "description": "Called when connection is deemed open.",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1899,
            "description": "Handles a packet.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1939,
            "description": "Called upon handshake completion.",
            "params": [
                {
                    "name": "handshake",
                    "description": "obj",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1963,
            "description": "Resets ping timeout.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1978,
            "description": "Pings server every `this.pingInterval` and expects response\nwithin `this.pingTimeout` or closes connection.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 1995,
            "description": "Sends a ping packet.",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2005,
            "description": "Called on `drain` event",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2033,
            "description": "Flush write buffers.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2051,
            "description": "Sends a message.",
            "params": [
                {
                    "name": "message.",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "for chaining.",
                "type": "Socket"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2066,
            "description": "Sends a packet.",
            "params": [
                {
                    "name": "packet",
                    "description": "type.",
                    "type": "String"
                },
                {
                    "name": "data.",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "function.",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2083,
            "description": "Closes the connection.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2099,
            "description": "Called upon transport error",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2112,
            "description": "Called upon transport close.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2155,
            "description": "Filters upgrades, returning only those matching client transports.",
            "params": [
                {
                    "name": "server",
                    "description": "upgrades",
                    "type": "Array"
                }
            ],
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2172,
            "description": "Module dependencies.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2179,
            "description": "Module exports.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2185,
            "description": "Transport abstract constructor.",
            "params": [
                {
                    "name": "options.",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2205,
            "description": "Mix in `Emitter`.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2211,
            "description": "A counter used to prevent collisions in the timestamps used\nfor cache busting.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2218,
            "description": "Emits an error.",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "for chaining",
                "type": "Transport"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2234,
            "description": "Opens the transport.",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2249,
            "description": "Closes the transport.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2264,
            "description": "Sends multiple packets.",
            "params": [
                {
                    "name": "packets",
                    "description": "",
                    "type": "Array"
                }
            ],
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2279,
            "description": "Called upon open",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2291,
            "description": "Called with data.",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2308,
            "description": "Called with a decoded packet.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2316,
            "description": "Called upon close.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2337,
            "description": "Export transports.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2344,
            "description": "Polling transport polymorphic constructor.\nDecides on xhr vs jsonp based on feature detection.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2379,
            "description": "Module requirements.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2386,
            "description": "Module exports.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2392,
            "description": "Cached regular expressions.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2399,
            "description": "Global JSONP callbacks.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2405,
            "description": "Callbacks count.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2411,
            "description": "Noop.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2417,
            "description": "JSONP Polling constructor.",
            "params": [
                {
                    "name": "opts.",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2457,
            "description": "Inherits from Polling.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2469,
            "description": "Closes the socket.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2489,
            "description": "Starts a poll cycle.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2525,
            "description": "Writes with a hidden iframe.",
            "params": [
                {
                    "name": "data",
                    "description": "to send",
                    "type": "String"
                },
                {
                    "name": "called",
                    "description": "upon flush.",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2622,
            "description": "Module exports.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2629,
            "description": "Empty function",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2635,
            "description": "XHR Polling constructor.",
            "params": [
                {
                    "name": "opts",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2659,
            "description": "Inherits from Polling.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2665,
            "description": "XHR supports binary",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2671,
            "description": "Creates a request.",
            "params": [
                {
                    "name": "method",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2687,
            "description": "Sends data.",
            "params": [
                {
                    "name": "data",
                    "description": "to send.",
                    "type": "String"
                },
                {
                    "name": "called",
                    "description": "upon flush.",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2706,
            "description": "Starts a poll cycle.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2725,
            "description": "Request constructor",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2742,
            "description": "Mix in `Emitter`.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2748,
            "description": "Creates the XHR object and sends the request.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2832,
            "description": "Called upon successful response.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2843,
            "description": "Called if we have data.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2854,
            "description": "Called upon error.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2865,
            "description": "Cleans up house.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2889,
            "description": "Aborts the request.",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2899,
            "description": "Aborts pending requests when unloading the window. This is needed to prevent\nmemory leaks (e.g. when using IE) and to ensure that no spurious error is\nemitted.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2924,
            "description": "Module dependencies.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2934,
            "description": "Module exports.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2940,
            "description": "Is XHR2 supported?",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2950,
            "description": "Polling interface.",
            "params": [
                {
                    "name": "opts",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2965,
            "description": "Inherits from Transport.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2971,
            "description": "Transport name.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2977,
            "description": "Opens the socket (triggers polling). We write a PING message to determine\nwhen the transport is open.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 2988,
            "description": "Pauses polling.",
            "params": [
                {
                    "name": "callback",
                    "description": "upon buffers are flushed and transport is paused",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3032,
            "description": "Starts polling cycle.",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3045,
            "description": "Overloads onData to detect payloads.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3087,
            "description": "For polling, send a close packet.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3112,
            "description": "Writes a packets payload.",
            "params": [
                {
                    "name": "data",
                    "description": "packets",
                    "type": "Array"
                },
                {
                    "name": "drain",
                    "description": "callback",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3134,
            "description": "Generates uri for connection.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3171,
            "description": "Module dependencies.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3181,
            "description": "`ws` exposes a WebSocket-compatible interface in\nNode, or the `WebSocket` or `MozWebSocket` globals\nin the browser.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3189,
            "description": "Module exports.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3195,
            "description": "WebSocket transport constructor.",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3210,
            "description": "Inherits from Transport.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3216,
            "description": "Transport name.",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3230,
            "description": "Opens socket.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3257,
            "description": "Adds event listeners to the socket",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3280,
            "description": "Override `onData` to use a timer on iOS.\nSee: https://gist.github.com/mloughran/2052006",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3297,
            "description": "Writes data to socket.",
            "params": [
                {
                    "name": "array",
                    "description": "of packets.",
                    "type": "Array"
                }
            ],
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3331,
            "description": "Called upon close",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3341,
            "description": "Closes socket.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3353,
            "description": "Generates uri for connection.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3390,
            "description": "Feature detection for WebSocket.",
            "return": {
                "description": "whether this transport is available.",
                "type": "Boolean"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3441,
            "description": "Check if we are running an android browser. That requires us to use\nArrayBuffer with polling transports...\n\nhttp://ghinda.net/jpeg-blob-ajax-android/",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3450,
            "description": "Current protocol version.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3456,
            "description": "Packet types.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3472,
            "description": "Premade error packet.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3478,
            "description": "Create a blob api even for blob builder when vendor prefixes exist",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3484,
            "description": "Encodes a packet.\n\n    <packet type id> [ <data> ]\n\nExample:\n\n    5hello world\n    3\n    4\n\nBinary is encoded in an identical principle",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3528,
            "description": "Encode packet helpers for binary types",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3578,
            "description": "Encodes a packet with binary data in a base64 string",
            "params": [
                {
                    "name": "packet,",
                    "description": "has `type` and `data`",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "base64 encoded message",
                "type": "String"
            },
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3612,
            "description": "Decodes a packet. Changes format to Blob if requested.",
            "return": {
                "description": "with `type` and `data` (if any)",
                "type": "Object"
            },
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3649,
            "description": "Decodes a packet encoded in a base64 string",
            "params": [
                {
                    "name": "base64",
                    "description": "encoded message",
                    "type": "String"
                }
            ],
            "return": {
                "description": "with `type` and `data` (if any)",
                "type": "Object"
            },
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3671,
            "description": "Encodes multiple messages (payload).\n\n    <length>:data\n\nExample:\n\n    11:hello world2:hi\n\nIf any contents are binary, they will be encoded as base64 strings. Base64\nencoded strings are marked with a b before the length specifier",
            "params": [
                {
                    "name": "packets",
                    "description": "",
                    "type": "Array"
                }
            ],
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3720,
            "description": "Async array map using after",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3810,
            "description": "Encodes multiple messages (payload) as binary.\n\n<1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n255><data>\n\nExample:\n1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers",
            "params": [
                {
                    "name": "packets",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "encoded payload",
                "type": "ArrayBuffer"
            },
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3882,
            "description": "Encode as Blob",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 3977,
            "description": "Gets the keys for an object.",
            "return": {
                "description": "keys",
                "type": "Array"
            },
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4027,
            "description": "An abstraction for slicing an arraybuffer even when\nArrayBuffer.prototype.slice is not supported",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4128,
            "description": "Check if Blob constructor is supported",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4141,
            "description": "Check if BlobBuilder is supported",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4444,
            "description": "Compiles a querystring\nReturns string representation of the object",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4465,
            "description": "Parses a simple querystring into an object",
            "params": [
                {
                    "name": "qs",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4484,
            "description": "Module dependencies.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4490,
            "description": "WebSocket constructor.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4496,
            "description": "Module exports.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4502,
            "description": "WebSocket constructor.\n\nThe third `opts` options object gets ignored in web browsers, since it's\nnon-standard, and throws a TypeError if passed to the constructor.\nSee: https://github.com/einaros/ws/issues/227",
            "params": [
                {
                    "name": "uri",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "protocols",
                    "description": "(optional)",
                    "type": "Array"
                },
                {
                    "name": "{Object)",
                    "description": "opts (optional)"
                }
            ],
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4534,
            "description": "Module exports.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4540,
            "description": "Checks for binary data.\n\nRight now only Buffer and ArrayBuffer are supported..",
            "params": [
                {
                    "name": "anything",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4593,
            "description": "Module dependencies.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4599,
            "description": "Module exports.\n\nLogic borrowed from Modernizr:\n\n  - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4618,
            "description": "Returns `this`. Execute this without a \"context\" (i.e. without it being\nattached to an object of the left-hand side), and `this` points to the\n\"global\" scope of the current JS execution.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4639,
            "description": "HOP ref.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4645,
            "description": "Return own keys in `obj`.",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4663,
            "description": "Return own values in `obj`.",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4681,
            "description": "Merge `b` into `a`.",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "a",
                "type": "Object"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4699,
            "description": "Return length of `obj`.",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4711,
            "description": "Check if `obj` is empty.",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4723,
            "description": "Parses an URI",
            "author": "Steven Levithan <stevenlevithan.com> (MIT license)",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4756,
            "description": "Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\nAnything with blobs or files should be fed through removeBlobs before coming\nhere.",
            "params": [
                {
                    "name": "packet",
                    "description": "- socket.io event packet",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "with deconstructed packet and list of buffers",
                "type": "Object"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4800,
            "description": "Reconstructs a binary packet from its placeholder packet and buffers",
            "params": [
                {
                    "name": "packet",
                    "description": "- event packet with placeholders",
                    "type": "Object"
                },
                {
                    "name": "buffers",
                    "description": "- binary buffers to put in placeholder positions",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "reconstructed packet",
                "type": "Object"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4835,
            "description": "Asynchronously removes Blobs or Files from data via\nFileReader's readAsArrayBuffer method. Used before encoding\ndata as msgpack. Calls callback with the blobless data.",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4893,
            "description": "Returns true if obj is a buffer or an arraybuffer.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4905,
            "description": "Module dependencies.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4915,
            "description": "Protocol version.",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4923,
            "description": "Packet types.",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4939,
            "description": "Packet type `connect`.",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4947,
            "description": "Packet type `disconnect`.",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4955,
            "description": "Packet type `event`.",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4963,
            "description": "Packet type `ack`.",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4971,
            "description": "Packet type `error`.",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4979,
            "description": "Packet type 'binary event'",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4987,
            "description": "Packet type `binary ack`. For acks with binary arguments.",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 4997,
            "description": "A socket.io Encoder instance",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 5004,
            "description": "Encode a packet as a single string if non-binary, or as a\nbuffer sequence, depending on packet type.",
            "params": [
                {
                    "name": "obj",
                    "description": "- packet object",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "- function to handle encodings (likely engine.write)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Calls callback with Array of encodings"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 5026,
            "description": "Encode packet as string.",
            "params": [
                {
                    "name": "packet",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "encoded",
                "type": "String"
            },
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 5073,
            "description": "Encode packet as 'buffer sequence' by removing blobs, and\ndeconstructing packet into object with placeholders and\na list of buffers.",
            "params": [
                {
                    "name": "packet",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "encoded",
                "type": "Buffer"
            },
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 5099,
            "description": "A socket.io Decoder instance",
            "return": {
                "description": "decoder",
                "type": "Object"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 5110,
            "description": "Mix in `Emitter` with Decoder.",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 5116,
            "description": "Decodes an ecoded packet string into packet JSON.",
            "params": [
                {
                    "name": "obj",
                    "description": "- encoded packet",
                    "type": "String"
                }
            ],
            "return": {
                "description": "packet",
                "type": "Object"
            },
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 5157,
            "description": "Decode a packet String (JSON data)",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "packet",
                "type": "Object"
            },
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 5224,
            "description": "Deallocates a parser's resources",
            "api": "public",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 5236,
            "description": "A manager of a binary event's 'buffer sequence'. Should\nbe constructed whenever a packet of type BINARY_EVENT is\ndecoded.",
            "params": [
                {
                    "name": "packet",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "initialized reconstructor",
                "type": "BinaryReconstructor"
            },
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 5251,
            "description": "Method to be called when binary data received from connection\nafter a BINARY_EVENT packet.",
            "params": [
                {
                    "name": "binData",
                    "description": "- the raw binary data received",
                    "type": "Buffer | ArrayBuffer"
                }
            ],
            "return": {
                "description": "returns null if more binary data is expected or\n  a reconstructed packet object if all buffers have been received.",
                "type": "Null | Object"
            },
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "public/javascripts/socket.io.js",
            "line": 5271,
            "description": "Cleans up binary packet reconstruction variables.",
            "api": "private",
            "class": "dbController"
        },
        {
            "file": "routes/dbRoutes.js",
            "line": 59,
            "description": "Get collection by collection name\n\nTODO: Should support all optional parameters in http://docs.mongolab.com/restapi/#list-documents, now only support \"q\"",
            "itemtype": "method",
            "name": "getCollection",
            "params": [
                {
                    "name": "collectionName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "queryString",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "userList",
                "type": "JSON"
            },
            "class": "dbController"
        },
        {
            "file": "routes/dbRoutes.js",
            "line": 78,
            "description": "Get document by document name\ne.g. Get User by userid",
            "itemtype": "method",
            "name": "getDocument",
            "params": [
                {
                    "name": "collectionName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "documentName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "user",
                "type": "JSON"
            },
            "class": "dbController"
        },
        {
            "file": "routes/dbRoutes.js",
            "line": 95,
            "description": "Create document in given collection",
            "itemtype": "method",
            "name": "createDocument",
            "params": [
                {
                    "name": "collectionName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "input",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "document (Depends)",
                "type": "JSON"
            },
            "class": "dbController"
        },
        {
            "file": "routes/dbRoutes.js",
            "line": 109,
            "description": "Update document in given collection",
            "itemtype": "method",
            "name": "updateDocument",
            "params": [
                {
                    "name": "collectionName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "documentId",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "input",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "document (Depends)",
                "type": "JSON"
            },
            "example": [
                " Example of input\n {\"$set\": {\n      username: username,\n      password: generateHash(password)\n }}"
            ],
            "class": "dbController"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:29"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:69"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:77"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:86"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:117"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:153"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:172"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:186"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:200"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:214"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:228"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:241"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:257"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:324"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:348"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:358"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:368"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:379"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:409"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:435"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:449"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:465"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:477"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:493"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:540"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:561"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:600"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:626"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:652"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:667"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:682"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:696"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:732"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:744"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:759"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:773"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:814"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:837"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:862"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:876"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:889"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:908"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:920"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:937"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:974"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1039"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1065"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1075"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1090"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1107"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1131"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1198"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1211"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1231"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1269"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1296"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1306"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1325"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1376"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1386"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1401"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1417"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1441"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1501"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1514"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1534"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1562"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1570"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1638"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1656"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1705"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1723"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1757"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1876"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1899"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1939"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1963"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1978"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:1995"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2005"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2033"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2051"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2066"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2083"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2099"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2112"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2155"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2185"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2218"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2234"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2249"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2264"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2279"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2291"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2316"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2344"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2417"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2469"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2489"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2525"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2635"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2671"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2687"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2706"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2725"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2748"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2832"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2843"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2854"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2865"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2889"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2950"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2977"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:2988"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:3032"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:3045"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:3087"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:3112"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:3134"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:3195"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:3195"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:3216"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:3230"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:3257"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:3280"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:3297"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:3331"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:3341"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:3353"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:3390"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:3484"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:3612"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:3671"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:3810"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:3977"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:4027"
        },
        {
            "message": "param name missing: {Object}",
            "line": " public/javascripts/socket.io.js:4444"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:4444"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:4465"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:4502"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:4540"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:4645"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:4663"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:4681"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:4699"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:4711"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:4723"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:4756"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:4800"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:4835"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:4893"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:4915"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:4923"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:4939"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:4947"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:4955"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:4963"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:4971"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:4979"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:4987"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:4997"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:5004"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:5026"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:5073"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:5099"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:5116"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:5157"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:5224"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:5236"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:5251"
        },
        {
            "message": "unknown tag: api",
            "line": " public/javascripts/socket.io.js:5271"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " public/javascripts/socket.io.js:8"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " public/javascripts/socket.io.js:17"
        },
        {
            "message": "Missing item type\nManagers cache.",
            "line": " public/javascripts/socket.io.js:23"
        },
        {
            "message": "Missing item type\nLooks up an existing `Manager` for multiplexing.\nIf the user summons:\n\n  `io('http://localhost/a');`\n  `io('http://localhost/b');`\n\nWe reuse the existing instance based on same scheme/port/host,\nand we initialize sockets for each namespace.",
            "line": " public/javascripts/socket.io.js:29"
        },
        {
            "message": "Missing item type\nProtocol version.",
            "line": " public/javascripts/socket.io.js:69"
        },
        {
            "message": "Missing item type\n`connect`.",
            "line": " public/javascripts/socket.io.js:77"
        },
        {
            "message": "Missing item type\nExpose constructors for standalone build.",
            "line": " public/javascripts/socket.io.js:86"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " public/javascripts/socket.io.js:97"
        },
        {
            "message": "Missing item type\nModule exports",
            "line": " public/javascripts/socket.io.js:111"
        },
        {
            "message": "Missing item type\n`Manager` constructor.",
            "line": " public/javascripts/socket.io.js:117"
        },
        {
            "message": "Missing item type\nPropagate given event to sockets and emit on `this`",
            "line": " public/javascripts/socket.io.js:153"
        },
        {
            "message": "Missing item type\nMix in `Emitter`.",
            "line": " public/javascripts/socket.io.js:166"
        },
        {
            "message": "Missing item type\nSets the `reconnection` config.",
            "line": " public/javascripts/socket.io.js:172"
        },
        {
            "message": "Missing item type\nSets the reconnection attempts config.",
            "line": " public/javascripts/socket.io.js:186"
        },
        {
            "message": "Missing item type\nSets the delay between reconnections.",
            "line": " public/javascripts/socket.io.js:200"
        },
        {
            "message": "Missing item type\nSets the maximum delay between reconnections.",
            "line": " public/javascripts/socket.io.js:214"
        },
        {
            "message": "Missing item type\nSets the connection timeout. `false` to disable",
            "line": " public/javascripts/socket.io.js:228"
        },
        {
            "message": "Missing item type\nStarts trying to reconnect if reconnection is enabled and we have not\nstarted reconnecting yet",
            "line": " public/javascripts/socket.io.js:241"
        },
        {
            "message": "Missing item type\nSets the current transport `socket`.",
            "line": " public/javascripts/socket.io.js:257"
        },
        {
            "message": "Missing item type\nCalled upon transport open.",
            "line": " public/javascripts/socket.io.js:324"
        },
        {
            "message": "Missing item type\nCalled with data.",
            "line": " public/javascripts/socket.io.js:348"
        },
        {
            "message": "Missing item type\nCalled when parser fully decodes a packet.",
            "line": " public/javascripts/socket.io.js:358"
        },
        {
            "message": "Missing item type\nCalled upon socket error.",
            "line": " public/javascripts/socket.io.js:368"
        },
        {
            "message": "Missing item type\nCreates a new socket for the given `nsp`.",
            "line": " public/javascripts/socket.io.js:379"
        },
        {
            "message": "Missing item type\nCalled upon a socket close.",
            "line": " public/javascripts/socket.io.js:399"
        },
        {
            "message": "Missing item type\nWrites a packet.",
            "line": " public/javascripts/socket.io.js:409"
        },
        {
            "message": "Missing item type\nIf packet buffer is non-empty, begins encoding the\nnext packet in line.",
            "line": " public/javascripts/socket.io.js:435"
        },
        {
            "message": "Missing item type\nClean up transport subscriptions and packet buffer.",
            "line": " public/javascripts/socket.io.js:449"
        },
        {
            "message": "Missing item type\nClose the current socket.",
            "line": " public/javascripts/socket.io.js:465"
        },
        {
            "message": "Missing item type\nCalled upon engine close.",
            "line": " public/javascripts/socket.io.js:477"
        },
        {
            "message": "Missing item type\nAttempt a reconnection.",
            "line": " public/javascripts/socket.io.js:493"
        },
        {
            "message": "Missing item type\nCalled upon successful reconnect.",
            "line": " public/javascripts/socket.io.js:540"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " public/javascripts/socket.io.js:555"
        },
        {
            "message": "Missing item type\nHelper for subscriptions.",
            "line": " public/javascripts/socket.io.js:561"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " public/javascripts/socket.io.js:581"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " public/javascripts/socket.io.js:594"
        },
        {
            "message": "Missing item type\nInternal events (blacklisted).\nThese events can't be emitted by the user.",
            "line": " public/javascripts/socket.io.js:600"
        },
        {
            "message": "Missing item type\nShortcut to `Emitter#emit`.",
            "line": " public/javascripts/socket.io.js:620"
        },
        {
            "message": "Missing item type\n`Socket` constructor.",
            "line": " public/javascripts/socket.io.js:626"
        },
        {
            "message": "Missing item type\nMix in `Emitter`.",
            "line": " public/javascripts/socket.io.js:646"
        },
        {
            "message": "Missing item type\nSubscribe to open, close and packet events",
            "line": " public/javascripts/socket.io.js:652"
        },
        {
            "message": "Missing item type\nCalled upon engine `open`.",
            "line": " public/javascripts/socket.io.js:667"
        },
        {
            "message": "Missing item type\nSends a `message` event.",
            "line": " public/javascripts/socket.io.js:682"
        },
        {
            "message": "Missing item type\nOverride `emit`.\nIf the event is in `events`, it's emitted normally.",
            "line": " public/javascripts/socket.io.js:696"
        },
        {
            "message": "Missing item type\nSends a packet.",
            "line": " public/javascripts/socket.io.js:732"
        },
        {
            "message": "Missing item type\n\"Opens\" the socket.",
            "line": " public/javascripts/socket.io.js:744"
        },
        {
            "message": "Missing item type\nCalled upon engine `close`.",
            "line": " public/javascripts/socket.io.js:759"
        },
        {
            "message": "Missing item type\nCalled with socket packet.",
            "line": " public/javascripts/socket.io.js:773"
        },
        {
            "message": "Missing item type\nCalled upon a server event.",
            "line": " public/javascripts/socket.io.js:814"
        },
        {
            "message": "Missing item type\nProduces an ack callback to emit with an event.",
            "line": " public/javascripts/socket.io.js:837"
        },
        {
            "message": "Missing item type\nCalled upon a server acknowlegement.",
            "line": " public/javascripts/socket.io.js:862"
        },
        {
            "message": "Missing item type\nCalled upon server connect.",
            "line": " public/javascripts/socket.io.js:876"
        },
        {
            "message": "Missing item type\nEmit buffered events (received and emitted).",
            "line": " public/javascripts/socket.io.js:889"
        },
        {
            "message": "Missing item type\nCalled upon server disconnect.",
            "line": " public/javascripts/socket.io.js:908"
        },
        {
            "message": "Missing item type\nCalled upon forced client/server side disconnections,\nthis method ensures the manager stops tracking us and\nthat reconnections don't get triggered for this.",
            "line": " public/javascripts/socket.io.js:920"
        },
        {
            "message": "Missing item type\nDisconnects the socket manually.",
            "line": " public/javascripts/socket.io.js:937"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " public/javascripts/socket.io.js:961"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " public/javascripts/socket.io.js:968"
        },
        {
            "message": "Missing item type\nURL parser.",
            "line": " public/javascripts/socket.io.js:974"
        },
        {
            "message": "Missing item type\nSlice reference.",
            "line": " public/javascripts/socket.io.js:1033"
        },
        {
            "message": "Missing item type\nBind `obj` to `fn`.",
            "line": " public/javascripts/socket.io.js:1039"
        },
        {
            "message": "Missing item type\nExpose `Emitter`.",
            "line": " public/javascripts/socket.io.js:1059"
        },
        {
            "message": "Missing item type\nInitialize a new `Emitter`.",
            "line": " public/javascripts/socket.io.js:1065"
        },
        {
            "message": "Missing item type\nMixin the emitter properties.",
            "line": " public/javascripts/socket.io.js:1075"
        },
        {
            "message": "Missing item type\nListen on the given `event` with `fn`.",
            "line": " public/javascripts/socket.io.js:1090"
        },
        {
            "message": "Missing item type\nAdds an `event` listener that will be invoked a single\ntime then automatically removed.",
            "line": " public/javascripts/socket.io.js:1107"
        },
        {
            "message": "Missing item type\nRemove the given callback for `event` or all\nregistered callbacks.",
            "line": " public/javascripts/socket.io.js:1131"
        },
        {
            "message": "Missing item type\nEmit `event` with the given args.",
            "line": " public/javascripts/socket.io.js:1175"
        },
        {
            "message": "Missing item type\nReturn array of callbacks for `event`.",
            "line": " public/javascripts/socket.io.js:1198"
        },
        {
            "message": "Missing item type\nCheck if this emitter has `event` handlers.",
            "line": " public/javascripts/socket.io.js:1211"
        },
        {
            "message": "Missing item type\nExpose `debug()` as the module.",
            "line": " public/javascripts/socket.io.js:1225"
        },
        {
            "message": "Missing item type\nCreate a debugger with the given `name`.",
            "line": " public/javascripts/socket.io.js:1231"
        },
        {
            "message": "Missing item type\nThe currently active debug mode names.",
            "line": " public/javascripts/socket.io.js:1262"
        },
        {
            "message": "Missing item type\nEnables a debug mode by name. This can include modes\nseparated by a colon and wildcards.",
            "line": " public/javascripts/socket.io.js:1269"
        },
        {
            "message": "Missing item type\nDisable debug output.",
            "line": " public/javascripts/socket.io.js:1296"
        },
        {
            "message": "Missing item type\nHumanize the given `ms`.",
            "line": " public/javascripts/socket.io.js:1306"
        },
        {
            "message": "Missing item type\nReturns true if the given mode name is enabled, false otherwise.",
            "line": " public/javascripts/socket.io.js:1325"
        },
        {
            "message": "Missing item type\nCoerce `val`.",
            "line": " public/javascripts/socket.io.js:1347"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " public/javascripts/socket.io.js:1364"
        },
        {
            "message": "Missing item type\nExpose `Emitter`.",
            "line": " public/javascripts/socket.io.js:1370"
        },
        {
            "message": "Missing item type\nInitialize a new `Emitter`.",
            "line": " public/javascripts/socket.io.js:1376"
        },
        {
            "message": "Missing item type\nMixin the emitter properties.",
            "line": " public/javascripts/socket.io.js:1386"
        },
        {
            "message": "Missing item type\nListen on the given `event` with `fn`.",
            "line": " public/javascripts/socket.io.js:1401"
        },
        {
            "message": "Missing item type\nAdds an `event` listener that will be invoked a single\ntime then automatically removed.",
            "line": " public/javascripts/socket.io.js:1417"
        },
        {
            "message": "Missing item type\nRemove the given callback for `event` or all\nregistered callbacks.",
            "line": " public/javascripts/socket.io.js:1441"
        },
        {
            "message": "Missing item type\nEmit `event` with the given args.",
            "line": " public/javascripts/socket.io.js:1478"
        },
        {
            "message": "Missing item type\nReturn array of callbacks for `event`.",
            "line": " public/javascripts/socket.io.js:1501"
        },
        {
            "message": "Missing item type\nCheck if this emitter has `event` handlers.",
            "line": " public/javascripts/socket.io.js:1514"
        },
        {
            "message": "Missing item type\nExports parser",
            "line": " public/javascripts/socket.io.js:1534"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " public/javascripts/socket.io.js:1556"
        },
        {
            "message": "Missing item type\nNoop function.",
            "line": " public/javascripts/socket.io.js:1562"
        },
        {
            "message": "Missing item type\nSocket constructor.",
            "line": " public/javascripts/socket.io.js:1570"
        },
        {
            "message": "Missing item type\nMix in `Emitter`.",
            "line": " public/javascripts/socket.io.js:1632"
        },
        {
            "message": "Missing item type\nProtocol version.",
            "line": " public/javascripts/socket.io.js:1638"
        },
        {
            "message": "Missing item type\nExpose deps for legacy compatibility\nand standalone browser access.",
            "line": " public/javascripts/socket.io.js:1646"
        },
        {
            "message": "Missing item type\nCreates transport of the given type.",
            "line": " public/javascripts/socket.io.js:1656"
        },
        {
            "message": "Missing item type\nInitializes transport to use and starts probe.",
            "line": " public/javascripts/socket.io.js:1705"
        },
        {
            "message": "Missing item type\nSets the current transport. Disables the existing one (if any).",
            "line": " public/javascripts/socket.io.js:1723"
        },
        {
            "message": "Missing item type\nProbes a transport.",
            "line": " public/javascripts/socket.io.js:1757"
        },
        {
            "message": "Missing item type\nCalled when connection is deemed open.",
            "line": " public/javascripts/socket.io.js:1876"
        },
        {
            "message": "Missing item type\nHandles a packet.",
            "line": " public/javascripts/socket.io.js:1899"
        },
        {
            "message": "Missing item type\nCalled upon handshake completion.",
            "line": " public/javascripts/socket.io.js:1939"
        },
        {
            "message": "Missing item type\nResets ping timeout.",
            "line": " public/javascripts/socket.io.js:1963"
        },
        {
            "message": "Missing item type\nPings server every `this.pingInterval` and expects response\nwithin `this.pingTimeout` or closes connection.",
            "line": " public/javascripts/socket.io.js:1978"
        },
        {
            "message": "Missing item type\nSends a ping packet.",
            "line": " public/javascripts/socket.io.js:1995"
        },
        {
            "message": "Missing item type\nCalled on `drain` event",
            "line": " public/javascripts/socket.io.js:2005"
        },
        {
            "message": "Missing item type\nFlush write buffers.",
            "line": " public/javascripts/socket.io.js:2033"
        },
        {
            "message": "Missing item type\nSends a message.",
            "line": " public/javascripts/socket.io.js:2051"
        },
        {
            "message": "Missing item type\nSends a packet.",
            "line": " public/javascripts/socket.io.js:2066"
        },
        {
            "message": "Missing item type\nCloses the connection.",
            "line": " public/javascripts/socket.io.js:2083"
        },
        {
            "message": "Missing item type\nCalled upon transport error",
            "line": " public/javascripts/socket.io.js:2099"
        },
        {
            "message": "Missing item type\nCalled upon transport close.",
            "line": " public/javascripts/socket.io.js:2112"
        },
        {
            "message": "Missing item type\nFilters upgrades, returning only those matching client transports.",
            "line": " public/javascripts/socket.io.js:2155"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " public/javascripts/socket.io.js:2172"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " public/javascripts/socket.io.js:2179"
        },
        {
            "message": "Missing item type\nTransport abstract constructor.",
            "line": " public/javascripts/socket.io.js:2185"
        },
        {
            "message": "Missing item type\nMix in `Emitter`.",
            "line": " public/javascripts/socket.io.js:2205"
        },
        {
            "message": "Missing item type\nA counter used to prevent collisions in the timestamps used\nfor cache busting.",
            "line": " public/javascripts/socket.io.js:2211"
        },
        {
            "message": "Missing item type\nEmits an error.",
            "line": " public/javascripts/socket.io.js:2218"
        },
        {
            "message": "Missing item type\nOpens the transport.",
            "line": " public/javascripts/socket.io.js:2234"
        },
        {
            "message": "Missing item type\nCloses the transport.",
            "line": " public/javascripts/socket.io.js:2249"
        },
        {
            "message": "Missing item type\nSends multiple packets.",
            "line": " public/javascripts/socket.io.js:2264"
        },
        {
            "message": "Missing item type\nCalled upon open",
            "line": " public/javascripts/socket.io.js:2279"
        },
        {
            "message": "Missing item type\nCalled with data.",
            "line": " public/javascripts/socket.io.js:2291"
        },
        {
            "message": "Missing item type\nCalled with a decoded packet.",
            "line": " public/javascripts/socket.io.js:2308"
        },
        {
            "message": "Missing item type\nCalled upon close.",
            "line": " public/javascripts/socket.io.js:2316"
        },
        {
            "message": "Missing item type\nExport transports.",
            "line": " public/javascripts/socket.io.js:2337"
        },
        {
            "message": "Missing item type\nPolling transport polymorphic constructor.\nDecides on xhr vs jsonp based on feature detection.",
            "line": " public/javascripts/socket.io.js:2344"
        },
        {
            "message": "Missing item type\nModule requirements.",
            "line": " public/javascripts/socket.io.js:2379"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " public/javascripts/socket.io.js:2386"
        },
        {
            "message": "Missing item type\nCached regular expressions.",
            "line": " public/javascripts/socket.io.js:2392"
        },
        {
            "message": "Missing item type\nGlobal JSONP callbacks.",
            "line": " public/javascripts/socket.io.js:2399"
        },
        {
            "message": "Missing item type\nCallbacks count.",
            "line": " public/javascripts/socket.io.js:2405"
        },
        {
            "message": "Missing item type\nNoop.",
            "line": " public/javascripts/socket.io.js:2411"
        },
        {
            "message": "Missing item type\nJSONP Polling constructor.",
            "line": " public/javascripts/socket.io.js:2417"
        },
        {
            "message": "Missing item type\nInherits from Polling.",
            "line": " public/javascripts/socket.io.js:2457"
        },
        {
            "message": "Missing item type\nCloses the socket.",
            "line": " public/javascripts/socket.io.js:2469"
        },
        {
            "message": "Missing item type\nStarts a poll cycle.",
            "line": " public/javascripts/socket.io.js:2489"
        },
        {
            "message": "Missing item type\nWrites with a hidden iframe.",
            "line": " public/javascripts/socket.io.js:2525"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " public/javascripts/socket.io.js:2622"
        },
        {
            "message": "Missing item type\nEmpty function",
            "line": " public/javascripts/socket.io.js:2629"
        },
        {
            "message": "Missing item type\nXHR Polling constructor.",
            "line": " public/javascripts/socket.io.js:2635"
        },
        {
            "message": "Missing item type\nInherits from Polling.",
            "line": " public/javascripts/socket.io.js:2659"
        },
        {
            "message": "Missing item type\nXHR supports binary",
            "line": " public/javascripts/socket.io.js:2665"
        },
        {
            "message": "Missing item type\nCreates a request.",
            "line": " public/javascripts/socket.io.js:2671"
        },
        {
            "message": "Missing item type\nSends data.",
            "line": " public/javascripts/socket.io.js:2687"
        },
        {
            "message": "Missing item type\nStarts a poll cycle.",
            "line": " public/javascripts/socket.io.js:2706"
        },
        {
            "message": "Missing item type\nRequest constructor",
            "line": " public/javascripts/socket.io.js:2725"
        },
        {
            "message": "Missing item type\nMix in `Emitter`.",
            "line": " public/javascripts/socket.io.js:2742"
        },
        {
            "message": "Missing item type\nCreates the XHR object and sends the request.",
            "line": " public/javascripts/socket.io.js:2748"
        },
        {
            "message": "Missing item type\nCalled upon successful response.",
            "line": " public/javascripts/socket.io.js:2832"
        },
        {
            "message": "Missing item type\nCalled if we have data.",
            "line": " public/javascripts/socket.io.js:2843"
        },
        {
            "message": "Missing item type\nCalled upon error.",
            "line": " public/javascripts/socket.io.js:2854"
        },
        {
            "message": "Missing item type\nCleans up house.",
            "line": " public/javascripts/socket.io.js:2865"
        },
        {
            "message": "Missing item type\nAborts the request.",
            "line": " public/javascripts/socket.io.js:2889"
        },
        {
            "message": "Missing item type\nAborts pending requests when unloading the window. This is needed to prevent\nmemory leaks (e.g. when using IE) and to ensure that no spurious error is\nemitted.",
            "line": " public/javascripts/socket.io.js:2899"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " public/javascripts/socket.io.js:2924"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " public/javascripts/socket.io.js:2934"
        },
        {
            "message": "Missing item type\nIs XHR2 supported?",
            "line": " public/javascripts/socket.io.js:2940"
        },
        {
            "message": "Missing item type\nPolling interface.",
            "line": " public/javascripts/socket.io.js:2950"
        },
        {
            "message": "Missing item type\nInherits from Transport.",
            "line": " public/javascripts/socket.io.js:2965"
        },
        {
            "message": "Missing item type\nTransport name.",
            "line": " public/javascripts/socket.io.js:2971"
        },
        {
            "message": "Missing item type\nOpens the socket (triggers polling). We write a PING message to determine\nwhen the transport is open.",
            "line": " public/javascripts/socket.io.js:2977"
        },
        {
            "message": "Missing item type\nPauses polling.",
            "line": " public/javascripts/socket.io.js:2988"
        },
        {
            "message": "Missing item type\nStarts polling cycle.",
            "line": " public/javascripts/socket.io.js:3032"
        },
        {
            "message": "Missing item type\nOverloads onData to detect payloads.",
            "line": " public/javascripts/socket.io.js:3045"
        },
        {
            "message": "Missing item type\nFor polling, send a close packet.",
            "line": " public/javascripts/socket.io.js:3087"
        },
        {
            "message": "Missing item type\nWrites a packets payload.",
            "line": " public/javascripts/socket.io.js:3112"
        },
        {
            "message": "Missing item type\nGenerates uri for connection.",
            "line": " public/javascripts/socket.io.js:3134"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " public/javascripts/socket.io.js:3171"
        },
        {
            "message": "Missing item type\n`ws` exposes a WebSocket-compatible interface in\nNode, or the `WebSocket` or `MozWebSocket` globals\nin the browser.",
            "line": " public/javascripts/socket.io.js:3181"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " public/javascripts/socket.io.js:3189"
        },
        {
            "message": "Missing item type\nWebSocket transport constructor.",
            "line": " public/javascripts/socket.io.js:3195"
        },
        {
            "message": "Missing item type\nInherits from Transport.",
            "line": " public/javascripts/socket.io.js:3210"
        },
        {
            "message": "Missing item type\nTransport name.",
            "line": " public/javascripts/socket.io.js:3216"
        },
        {
            "message": "Missing item type\nOpens socket.",
            "line": " public/javascripts/socket.io.js:3230"
        },
        {
            "message": "Missing item type\nAdds event listeners to the socket",
            "line": " public/javascripts/socket.io.js:3257"
        },
        {
            "message": "Missing item type\nOverride `onData` to use a timer on iOS.\nSee: https://gist.github.com/mloughran/2052006",
            "line": " public/javascripts/socket.io.js:3280"
        },
        {
            "message": "Missing item type\nWrites data to socket.",
            "line": " public/javascripts/socket.io.js:3297"
        },
        {
            "message": "Missing item type\nCalled upon close",
            "line": " public/javascripts/socket.io.js:3331"
        },
        {
            "message": "Missing item type\nCloses socket.",
            "line": " public/javascripts/socket.io.js:3341"
        },
        {
            "message": "Missing item type\nGenerates uri for connection.",
            "line": " public/javascripts/socket.io.js:3353"
        },
        {
            "message": "Missing item type\nFeature detection for WebSocket.",
            "line": " public/javascripts/socket.io.js:3390"
        },
        {
            "message": "Missing item type\nCheck if we are running an android browser. That requires us to use\nArrayBuffer with polling transports...\n\nhttp://ghinda.net/jpeg-blob-ajax-android/",
            "line": " public/javascripts/socket.io.js:3441"
        },
        {
            "message": "Missing item type\nCurrent protocol version.",
            "line": " public/javascripts/socket.io.js:3450"
        },
        {
            "message": "Missing item type\nPacket types.",
            "line": " public/javascripts/socket.io.js:3456"
        },
        {
            "message": "Missing item type\nPremade error packet.",
            "line": " public/javascripts/socket.io.js:3472"
        },
        {
            "message": "Missing item type\nCreate a blob api even for blob builder when vendor prefixes exist",
            "line": " public/javascripts/socket.io.js:3478"
        },
        {
            "message": "Missing item type\nEncodes a packet.\n\n    <packet type id> [ <data> ]\n\nExample:\n\n    5hello world\n    3\n    4\n\nBinary is encoded in an identical principle",
            "line": " public/javascripts/socket.io.js:3484"
        },
        {
            "message": "Missing item type\nEncode packet helpers for binary types",
            "line": " public/javascripts/socket.io.js:3528"
        },
        {
            "message": "Missing item type\nEncodes a packet with binary data in a base64 string",
            "line": " public/javascripts/socket.io.js:3578"
        },
        {
            "message": "Missing item type\nDecodes a packet. Changes format to Blob if requested.",
            "line": " public/javascripts/socket.io.js:3612"
        },
        {
            "message": "Missing item type\nDecodes a packet encoded in a base64 string",
            "line": " public/javascripts/socket.io.js:3649"
        },
        {
            "message": "Missing item type\nEncodes multiple messages (payload).\n\n    <length>:data\n\nExample:\n\n    11:hello world2:hi\n\nIf any contents are binary, they will be encoded as base64 strings. Base64\nencoded strings are marked with a b before the length specifier",
            "line": " public/javascripts/socket.io.js:3671"
        },
        {
            "message": "Missing item type\nAsync array map using after",
            "line": " public/javascripts/socket.io.js:3720"
        },
        {
            "message": "Missing item type\nEncodes multiple messages (payload) as binary.\n\n<1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n255><data>\n\nExample:\n1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers",
            "line": " public/javascripts/socket.io.js:3810"
        },
        {
            "message": "Missing item type\nEncode as Blob",
            "line": " public/javascripts/socket.io.js:3882"
        },
        {
            "message": "Missing item type\nGets the keys for an object.",
            "line": " public/javascripts/socket.io.js:3977"
        },
        {
            "message": "Missing item type\nAn abstraction for slicing an arraybuffer even when\nArrayBuffer.prototype.slice is not supported",
            "line": " public/javascripts/socket.io.js:4027"
        },
        {
            "message": "Missing item type\nCheck if Blob constructor is supported",
            "line": " public/javascripts/socket.io.js:4128"
        },
        {
            "message": "Missing item type\nCheck if BlobBuilder is supported",
            "line": " public/javascripts/socket.io.js:4141"
        },
        {
            "message": "Missing item type\nCompiles a querystring\nReturns string representation of the object",
            "line": " public/javascripts/socket.io.js:4444"
        },
        {
            "message": "Missing item type\nParses a simple querystring into an object",
            "line": " public/javascripts/socket.io.js:4465"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " public/javascripts/socket.io.js:4484"
        },
        {
            "message": "Missing item type\nWebSocket constructor.",
            "line": " public/javascripts/socket.io.js:4490"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " public/javascripts/socket.io.js:4496"
        },
        {
            "message": "Missing item type\nWebSocket constructor.\n\nThe third `opts` options object gets ignored in web browsers, since it's\nnon-standard, and throws a TypeError if passed to the constructor.\nSee: https://github.com/einaros/ws/issues/227",
            "line": " public/javascripts/socket.io.js:4502"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " public/javascripts/socket.io.js:4534"
        },
        {
            "message": "Missing item type\nChecks for binary data.\n\nRight now only Buffer and ArrayBuffer are supported..",
            "line": " public/javascripts/socket.io.js:4540"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " public/javascripts/socket.io.js:4593"
        },
        {
            "message": "Missing item type\nModule exports.\n\nLogic borrowed from Modernizr:\n\n  - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js",
            "line": " public/javascripts/socket.io.js:4599"
        },
        {
            "message": "Missing item type\nReturns `this`. Execute this without a \"context\" (i.e. without it being\nattached to an object of the left-hand side), and `this` points to the\n\"global\" scope of the current JS execution.",
            "line": " public/javascripts/socket.io.js:4618"
        },
        {
            "message": "Missing item type\nHOP ref.",
            "line": " public/javascripts/socket.io.js:4639"
        },
        {
            "message": "Missing item type\nReturn own keys in `obj`.",
            "line": " public/javascripts/socket.io.js:4645"
        },
        {
            "message": "Missing item type\nReturn own values in `obj`.",
            "line": " public/javascripts/socket.io.js:4663"
        },
        {
            "message": "Missing item type\nMerge `b` into `a`.",
            "line": " public/javascripts/socket.io.js:4681"
        },
        {
            "message": "Missing item type\nReturn length of `obj`.",
            "line": " public/javascripts/socket.io.js:4699"
        },
        {
            "message": "Missing item type\nCheck if `obj` is empty.",
            "line": " public/javascripts/socket.io.js:4711"
        },
        {
            "message": "Missing item type\nParses an URI",
            "line": " public/javascripts/socket.io.js:4723"
        },
        {
            "message": "Missing item type\nReplaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\nAnything with blobs or files should be fed through removeBlobs before coming\nhere.",
            "line": " public/javascripts/socket.io.js:4756"
        },
        {
            "message": "Missing item type\nReconstructs a binary packet from its placeholder packet and buffers",
            "line": " public/javascripts/socket.io.js:4800"
        },
        {
            "message": "Missing item type\nAsynchronously removes Blobs or Files from data via\nFileReader's readAsArrayBuffer method. Used before encoding\ndata as msgpack. Calls callback with the blobless data.",
            "line": " public/javascripts/socket.io.js:4835"
        },
        {
            "message": "Missing item type\nReturns true if obj is a buffer or an arraybuffer.",
            "line": " public/javascripts/socket.io.js:4893"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " public/javascripts/socket.io.js:4905"
        },
        {
            "message": "Missing item type\nProtocol version.",
            "line": " public/javascripts/socket.io.js:4915"
        },
        {
            "message": "Missing item type\nPacket types.",
            "line": " public/javascripts/socket.io.js:4923"
        },
        {
            "message": "Missing item type\nPacket type `connect`.",
            "line": " public/javascripts/socket.io.js:4939"
        },
        {
            "message": "Missing item type\nPacket type `disconnect`.",
            "line": " public/javascripts/socket.io.js:4947"
        },
        {
            "message": "Missing item type\nPacket type `event`.",
            "line": " public/javascripts/socket.io.js:4955"
        },
        {
            "message": "Missing item type\nPacket type `ack`.",
            "line": " public/javascripts/socket.io.js:4963"
        },
        {
            "message": "Missing item type\nPacket type `error`.",
            "line": " public/javascripts/socket.io.js:4971"
        },
        {
            "message": "Missing item type\nPacket type 'binary event'",
            "line": " public/javascripts/socket.io.js:4979"
        },
        {
            "message": "Missing item type\nPacket type `binary ack`. For acks with binary arguments.",
            "line": " public/javascripts/socket.io.js:4987"
        },
        {
            "message": "Missing item type\nA socket.io Encoder instance",
            "line": " public/javascripts/socket.io.js:4997"
        },
        {
            "message": "Missing item type\nEncode a packet as a single string if non-binary, or as a\nbuffer sequence, depending on packet type.",
            "line": " public/javascripts/socket.io.js:5004"
        },
        {
            "message": "Missing item type\nEncode packet as string.",
            "line": " public/javascripts/socket.io.js:5026"
        },
        {
            "message": "Missing item type\nEncode packet as 'buffer sequence' by removing blobs, and\ndeconstructing packet into object with placeholders and\na list of buffers.",
            "line": " public/javascripts/socket.io.js:5073"
        },
        {
            "message": "Missing item type\nA socket.io Decoder instance",
            "line": " public/javascripts/socket.io.js:5099"
        },
        {
            "message": "Missing item type\nMix in `Emitter` with Decoder.",
            "line": " public/javascripts/socket.io.js:5110"
        },
        {
            "message": "Missing item type\nDecodes an ecoded packet string into packet JSON.",
            "line": " public/javascripts/socket.io.js:5116"
        },
        {
            "message": "Missing item type\nDecode a packet String (JSON data)",
            "line": " public/javascripts/socket.io.js:5157"
        },
        {
            "message": "Missing item type\nDeallocates a parser's resources",
            "line": " public/javascripts/socket.io.js:5224"
        },
        {
            "message": "Missing item type\nA manager of a binary event's 'buffer sequence'. Should\nbe constructed whenever a packet of type BINARY_EVENT is\ndecoded.",
            "line": " public/javascripts/socket.io.js:5236"
        },
        {
            "message": "Missing item type\nMethod to be called when binary data received from connection\nafter a BINARY_EVENT packet.",
            "line": " public/javascripts/socket.io.js:5251"
        },
        {
            "message": "Missing item type\nCleans up binary packet reconstruction variables.",
            "line": " public/javascripts/socket.io.js:5271"
        }
    ]
}